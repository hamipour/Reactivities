// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance;

namespace Persistance.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Domain.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.Property<int>("TemperetureC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TemperetureF")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("WeatherDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Weathers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Summary = "windy",
                            TemperetureC = 20,
                            TemperetureF = 50,
                            WeatherDate = new DateTime(2020, 11, 3, 9, 55, 16, 353, DateTimeKind.Local).AddTicks(3577)
                        },
                        new
                        {
                            Id = 2,
                            Summary = "fogy",
                            TemperetureC = 15,
                            TemperetureF = 30,
                            WeatherDate = new DateTime(2020, 11, 3, 9, 55, 16, 360, DateTimeKind.Local).AddTicks(2556)
                        },
                        new
                        {
                            Id = 3,
                            Summary = "freezing",
                            TemperetureC = 5,
                            TemperetureF = 20,
                            WeatherDate = new DateTime(2020, 11, 3, 9, 55, 16, 360, DateTimeKind.Local).AddTicks(2629)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
